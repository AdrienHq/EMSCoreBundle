{% trans_default_domain 'EMSCoreBundle' %}<div class="btn-group{% if vertical is defined and vertical %}-vertical{% endif %}">
	{% if withView is not defined or withView %}
		{% include 'EMSCoreBundle:elements:get-button.html.twig' with { 
				'url': path('data.revisions', {
					'type': instance.contentType.name,
					'ouuid': instance.ouuid,
					'revisionId': revisionId
				}), 
				'label': 'View', 
				'icon': 'eye' }%}
	{% endif %}
	{% if draft %} 	
		{% if is_granted(instance.contentType.editRole) %}
			{% if not  instance.contentType.circlesField or attribute(instance.rawData, instance.contentType.circlesField) is not defined or attribute(instance.rawData, instance.contentType.circlesField)|in_my_circles %}
				{% include 'EMSCoreBundle:elements:get-button.html.twig' with { 
					'url': path('revision.edit', {'revisionId': revisionId}), 
					'label': 'Edit draft', 
					'icon': 'pencil' }%}
				{% if autoSave  %}
					{% include 'EMSCoreBundle:elements:post-button.html.twig' with {
						'url': path('revision.cancel', {'revision': revisionId}),
						'message': 'Cancel last modifications ?',
						'label': 'Cancel',
						'icon': 'remove'
					}%}
				{% endif %}
				</div>
				<div class="btn-group">
				{% include 'EMSCoreBundle:elements:post-button.html.twig' with {
					'url': path('revision.finalize', {'revision': revisionId}),
					'message': 'Finalize this draft ?',
					'label': 'Finalize',
					'icon': 'check'
				}%}
				{% include 'EMSCoreBundle:elements:post-button.html.twig' with {
					'url': path('revision.discard', {'revisionId': revisionId}),
					'message': 'Discard this draft ?',
					'label': 'Discard',
					'icon': 'trash'
				}%}
			{% endif %}
		{% endif %}
	{% else %}
		{# TODO: better way to determine if there is a environement to publish this revision in ? #}
		{# twig function ?#}
		{% set hasEnv = false %}
		{% for env in availableEnv %}
			{% if env not in environments %}
	   			{% set hasEnv = true %}
		   	{% endif %}
	   	{% endfor %}
	   	
		
		{% for env in environments %}
			{% include 'EMSCoreBundle:elements:object-views-button.html.twig' with { 
				'object':  object,
				'contentType': instance.contentType,
				'environment': env,
				'ouuid': revision.ouuid
			}%}
   		{% endfor %}


	   	{% if is_granted(instance.contentType.editRole) %}
	   		{% if not  instance.contentType.circlesField or attribute(object._source,instance.contentType.circlesField) is not defined or attribute(object._source,instance.contentType.circlesField)|in_my_circles %}			
				{% if draft %} 
					{% include 'EMSCoreBundle:elements:get-button.html.twig' with { 
						'url': path('revision.edit', {'revisionId': revisionId}), 
						'label': 'Edit draft', 
						'icon': 'pencil' }%}
					{% if autoSave  %}
						{% include 'EMSCoreBundle:elements:post-button.html.twig' with {
							'url': path('revision.cancel', {'revision': revisionId}),
							'message': 'Cancel last modifications ?',
							'label': 'Cancel',
							'icon': 'remove'
						}%}
					{% endif %}
				{% elseif current  %} 
					{% include 'EMSCoreBundle:elements:post-button.html.twig' with { 
						'url': path('revision.new-draft', {'ouuid': revision.ouuid, 'type':revision.contentType.name }), 
						'label': 'New draft', 
						'icon': 'pencil' }%}
				{% else %} 
					{% if ''|is_super and instance.contentType.fieldType.fieldsRoles|one_granted(true) %}
						{% include 'EMSCoreBundle:elements:get-button.html.twig' with { 
							'url': path('revision.edit', {'revisionId': revisionId}), 
							'label': 'Edit revision', 
							'icon': 'pencil' }%}
					{% endif %}
					{% if autoSave  %}
						{% include 'EMSCoreBundle:elements:post-button.html.twig' with {
							'url': path('revision.cancel', {'revision': revisionId}),
							'message': 'Cancel last modifications ?',
							'label': 'Cancel',
							'icon': 'remove'
						}%}
					{% endif %}
					{% include 'EMSCoreBundle:elements:post-button.html.twig' with { 
						'url': path('revision.revert', {'id': revisionId}), 
						'label': 'Revert revision', 
						'icon': 'undo' }%}
				{% endif %}
				
				
			{% endif %}
		{% endif %}
			
			</div>
			<div class="btn-group{% if vertical is defined and vertical %}-vertical{% endif %}">
		  {% if is_granted('ROLE_PUBLISHER') and is_granted(instance.contentType.publishRole) and hasEnv  %}
		  		{% if environments|length and ''|is_super %}
					{% include 'EMSCoreBundle:elements:post-button.html.twig' with { 
						'url': path('revision.reindex', {'revisionId': revisionId}), 
						'label': 'Re-index', 
						'icon': 'recycle'}%}
				{% endif %}
				<div class="btn-group">
				  <button type="button" class="btn btn-sm btn-danger dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
				    	<span class="fa fa-toggle-on"></span>&nbsp;
						Publish to
						<span class="caret"></span>
				  </button>
				   <ul class="dropdown-menu">
				   		{% for env in availableEnv %}
				   			<li>
							{% if env not in environments and env.circles|in_my_circles %}
					   				<a href="{{ path('revision.publish_to', {'revisionId': revisionId, 'envId': env.id}) }}">{{ env.name|humanize }}</a>
					   		{% endif %}
					   		</li>
				   		{% endfor %}
				   </ul>
				  </div>
		  {% endif %}
		
		  {% if is_granted('ROLE_WEBMASTER') and is_granted(instance.contentType.publishRole) and ((environments|length > 0 and not current) or (environments|length > 1 and current)) %}
		  	<div class="btn-group">
				  <button type="button" class="btn btn-sm btn-danger dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
				    	<span class="fa fa-toggle-off"></span>&nbsp;
						Unpublish from
						<span class="caret"></span>
				  </button>
				   <ul class="dropdown-menu">
				   		{% for env in availableEnv if env in environments and env.circles|in_my_circles %}
				   			<li>
				   				<a href="{{ path('revision.unpublish', {'revisionId': revisionId, 'envId': env.id}) }}">{{ env.name|humanize }}</a>
				   			</li>
				   		{% endfor %}
				   </ul>
			</div>
		  {% endif %}
		  
            {% if is_granted(instance.contentType.createRole) %}
            	{% if not  instance.contentType.circlesField or attribute(object._source, instance.contentType.circlesField) is not defined or attribute(object._source, instance.contentType.circlesField)|in_my_circles %}
            		{% include 'EMSCoreBundle:elements:post-button.html.twig' with {
            			'url':  path('object.delete', {'type': instance.contentType.name, 'ouuid': instance.ouuid} ),
            			'label': 'Delete',
            			'icon': 'trash',
            			'message': 'Do you confirm?'
            		}%}
            	{% endif %}
            {% endif %}
	{% endif %}
</div>