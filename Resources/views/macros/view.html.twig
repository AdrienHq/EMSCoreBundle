{% trans_default_domain 'EMSCoreBundle' %}


{%  macro recursifArray(array) %}
    {% import _self as macros %}
	<ul class="list-group">
		{% for prop, value in array %}
			<li class="list-group-item{% if value is not iterable %} leaf-item{% endif %}">
				<strong>{{ prop }} : </strong>
				{% if value is iterable %}
					{{ macros.recursifArray(value) }}
				{% else %}
					{{ value }}
				{% endif %}
			</li>
		{% endfor %}
	</ul>
{% endmacro %}E_ALL & ~E_DEPRECATED & ~E_STRICT

{%  macro recursifMapping(mapping, path) %}
    {% import _self as macros %}
	<div class="box-group" id="accordion{{ path }}">
		{% for key, child in mapping %}
			{% set collapsable =  (child|length > 1 or  child.properties is defined)%}
			<div class="panel box">
				<div
					class="box-header with-border bg-gray color-palette">
					<h4 class="box-title">
						{% if collapsable %}
							<a data-toggle="collapse" data-parent="#accordion{{ path }}"
								href="#collapse{{ path }}_{{ key }}" class="collapsed" aria-expanded="false"> 
								{{ key }} 
								{% if child.type is defined %}<small>{{ child.type }}</small>{% endif %}
							</a>
						{% else %}
							{{ key }} 
							<small>{{ child.type }}</small>
						{% endif %}
					</h4>
				</div>
				{% if collapsable %}
					<div id="collapse{{ path }}_{{ key }}" class="panel-collapse collapse"
						aria-expanded="false" style="height: 0px;">
						<div class="box-body">
							{% if child|length > 1 %}
								{{ macros.recursifArray(child) }}
							{% endif %}
							{% if child.properties is defined  %}
								{{ macros.recursifMapping(child.properties, path ~ '_' ~ key) }}
							{% endif %}
						</div>
					</div>
				{% endif %}
			</div>
		{% endfor %}
	</div>
{% endmacro %}


{%  macro renderMapping(mapping) %}
    {% import _self as macros %}
	{{ macros.recursifMapping(mapping, '') }}
{% endmacro %}


